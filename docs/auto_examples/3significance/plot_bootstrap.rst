
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/3significance/plot_bootstrap.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_3significance_plot_bootstrap.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_3significance_plot_bootstrap.py:


Significance via bootstrap
==========================

Testing the significance of individual modes and obtain confidence intervals
for both EOFs and PCs.

.. GENERATED FROM PYTHON SOURCE LINES 8-18

.. code-block:: default



    # Load packages and data:
    import xarray as xr
    import matplotlib.pyplot as plt
    from matplotlib.gridspec import GridSpec
    from cartopy.crs import Orthographic, PlateCarree

    from xeofs.xarray import EOF, Bootstrapper








.. GENERATED FROM PYTHON SOURCE LINES 19-22

.. code-block:: default


    t2m = xr.tutorial.load_dataset('air_temperature')['air']








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Perform EOF analysis

.. GENERATED FROM PYTHON SOURCE LINES 24-32

.. code-block:: default


    model = EOF(t2m, n_modes=25, norm=False, dim='time')
    model.solve()
    expvar = model.explained_variance_ratio()
    eofs = model.eofs()
    pcs = model.pcs()









.. GENERATED FROM PYTHON SOURCE LINES 33-37

Perform bootstrapping of the model to identy the number of significant modes.
We choose an significance level of alpha=0.05 and perform 20 bootstraps.
Note - if computationallly feasible - you typically want to you higher
numbers of bootstraps e.g. 100 or 1000.

.. GENERATED FROM PYTHON SOURCE LINES 37-46

.. code-block:: default


    alpha = .05
    n_boot = 20

    bs = Bootstrapper(n_boot=n_boot, alpha=alpha)
    bs.bootstrap(model)
    n_significant_modes = bs.n_significant_modes()
    print('{:} modes are significant at alpha={:.2}'.format(n_significant_modes, alpha))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Bootstrap:   0%|          | 0/20 [00:00<?, ?it/s]    Bootstrap:   5%|5         | 1/20 [00:00<00:06,  3.08it/s]    Bootstrap:  10%|#         | 2/20 [00:00<00:05,  3.10it/s]    Bootstrap:  15%|#5        | 3/20 [00:01<00:05,  2.94it/s]    Bootstrap:  20%|##        | 4/20 [00:01<00:05,  2.96it/s]    Bootstrap:  25%|##5       | 5/20 [00:01<00:04,  3.02it/s]    Bootstrap:  30%|###       | 6/20 [00:01<00:04,  3.00it/s]    Bootstrap:  35%|###5      | 7/20 [00:02<00:04,  2.97it/s]    Bootstrap:  40%|####      | 8/20 [00:02<00:04,  3.00it/s]    Bootstrap:  45%|####5     | 9/20 [00:03<00:03,  2.97it/s]    Bootstrap:  50%|#####     | 10/20 [00:03<00:03,  2.96it/s]    Bootstrap:  55%|#####5    | 11/20 [00:03<00:03,  2.97it/s]    Bootstrap:  60%|######    | 12/20 [00:04<00:02,  2.93it/s]    Bootstrap:  65%|######5   | 13/20 [00:04<00:02,  2.91it/s]    Bootstrap:  70%|#######   | 14/20 [00:04<00:02,  2.93it/s]    Bootstrap:  75%|#######5  | 15/20 [00:05<00:01,  2.92it/s]    Bootstrap:  80%|########  | 16/20 [00:05<00:01,  2.87it/s]    Bootstrap:  85%|########5 | 17/20 [00:05<00:01,  2.91it/s]    Bootstrap:  90%|######### | 18/20 [00:06<00:00,  2.88it/s]    Bootstrap:  95%|#########5| 19/20 [00:06<00:00,  2.83it/s]    Bootstrap: 100%|##########| 20/20 [00:06<00:00,  2.84it/s]    Bootstrap: 100%|##########| 20/20 [00:06<00:00,  2.93it/s]
    5 modes are significant at alpha=0.05




.. GENERATED FROM PYTHON SOURCE LINES 47-48

Create figure showing the first two modes

.. GENERATED FROM PYTHON SOURCE LINES 48-72

.. code-block:: default


    # proj = Orthographic(central_latitude=30, central_longitude=-80)
    # kwargs = {
    #     'cmap' : 'RdBu', 'vmin' : -.05, 'vmax': .05, 'transform': PlateCarree()
    # }
    #
    # fig = plt.figure(figsize=(10, 10))
    # gs = GridSpec(3, 4)
    # ax1 = fig.add_subplot(gs[0, :])
    # ax2 = fig.add_subplot(gs[1, 2:], projection=proj)
    # ax3 = fig.add_subplot(gs[1, :2])
    # ax4 = fig.add_subplot(gs[2, 2:], projection=proj)
    # ax5 = fig.add_subplot(gs[2, :2])
    #
    # ax2.coastlines(color='.5')
    # ax4.coastlines(color='.5')
    #
    # expvar.plot(ax=ax1, marker='.')
    # eofs.sel(mode=1).plot(ax=ax2, **kwargs)
    # pcs.sel(mode=1).plot(ax=ax3)
    # eofs.sel(mode=2).plot(ax=ax4, **kwargs)
    # pcs.sel(mode=2).plot(ax=ax5)
    # plt.tight_layout()
    # plt.savefig('eof-smode.jpg')








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.318 seconds)


.. _sphx_glr_download_auto_examples_3significance_plot_bootstrap.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_bootstrap.py <plot_bootstrap.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_bootstrap.ipynb <plot_bootstrap.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
