
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/1eof/plot_rock_pca.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_1eof_plot_rock_pca.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_1eof_plot_rock_pca.py:


ROCK PCA
========================

Rotated complex kernel PCA by Buseo et al. (2020)

Original reference
    Bueso, D., Piles, M. & Camps-Valls, G. Nonlinear PCA for Spatio-Temporal
    Analysis of Earth Observation Data. IEEE Trans. Geosci. Remote Sensing 1â€“12
    (2020) doi:10.1109/TGRS.2020.2969813.

.. GENERATED FROM PYTHON SOURCE LINES 12-22

.. code-block:: default



    # Load packages and data:
    import xarray as xr
    import matplotlib.pyplot as plt
    from matplotlib.gridspec import GridSpec
    from cartopy.crs import EqualEarth, PlateCarree

    from xeofs.xarray import ROCK_PCA








.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: default


    sst = xr.tutorial.open_dataset('ersstv5')['sst']








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Perform the actual analysis

.. GENERATED FROM PYTHON SOURCE LINES 28-39

.. code-block:: default


    model = ROCK_PCA(
        sst, weights='coslat', n_modes=20, n_rot=5,
        sigma=1e4, power=2, norm=False, dim='time'
    )
    model.solve()
    expvar = model.explained_variance_ratio()
    amp = model.eofs_amplitude()
    phase = model.eofs_phase()
    pcs = model.pcs().real





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Build distance matrix ... 
    Build kernel matrix ... 
    SVD ... 
    Rotation ... 




.. GENERATED FROM PYTHON SOURCE LINES 40-41

Create figure showing the first two modes

.. GENERATED FROM PYTHON SOURCE LINES 41-61

.. code-block:: default


    proj = EqualEarth(central_longitude=180)
    kwargs1 = {'cmap' : 'viridis', 'transform': PlateCarree()}
    kwargs2 = {'cmap' : 'twilight', 'transform': PlateCarree()}

    fig = plt.figure(figsize=(14, 8))
    gs = GridSpec(2, 2)
    ax1 = fig.add_subplot(gs[0, 0], projection=proj)
    ax2 = fig.add_subplot(gs[0, 1], projection=proj)
    ax3 = fig.add_subplot(gs[1, :])

    ax1.coastlines(color='.5')
    ax2.coastlines(color='.5')

    expvar.plot(ax=ax1, marker='.')
    amp.sel(mode=1).plot(ax=ax1, **kwargs1)
    phase.sel(mode=1).plot(ax=ax2, **kwargs2)
    pcs.sel(mode=1).plot(ax=ax3)
    plt.tight_layout()
    plt.savefig('rock-pca.jpg')



.. image-sg:: /auto_examples/1eof/images/sphx_glr_plot_rock_pca_001.png
   :alt: mode = 1, mode = 1, mode = 1
   :srcset: /auto_examples/1eof/images/sphx_glr_plot_rock_pca_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.024 seconds)


.. _sphx_glr_download_auto_examples_1eof_plot_rock_pca.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_rock_pca.py <plot_rock_pca.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_rock_pca.ipynb <plot_rock_pca.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
