
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/2cross/plot_rotated_mca.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_2cross_plot_rotated_mca.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_2cross_plot_rotated_mca.py:


Rotated Maximum Covariance Analysis
===================================

Rotated Maximum Covariance Analysis (MCA) between two data sets.

.. GENERATED FROM PYTHON SOURCE LINES 7-19

.. code-block:: default



    # Load packages and data:
    import numpy as np
    import xarray as xr
    import matplotlib.pyplot as plt
    from matplotlib.gridspec import GridSpec
    from cartopy.crs import Orthographic, PlateCarree
    from cartopy.feature import LAND

    from xeofs.xarray import MCA, MCA_Rotator








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Create 2 different DataArrays

.. GENERATED FROM PYTHON SOURCE LINES 21-26

.. code-block:: default


    t2m = xr.tutorial.load_dataset('air_temperature')['air']
    da1 = t2m.isel(lon=slice(0, 26))
    da2 = t2m.isel(lon=slice(27, None))








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Perform MCA

.. GENERATED FROM PYTHON SOURCE LINES 28-39

.. code-block:: default


    mca = MCA(
        X=da1, Y=da2,
        n_modes=20,
        dim='time',
        norm=False,
        weights_X='coslat',
        weights_Y='coslat'
    )
    mca.solve()








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Apply Varimax-rotation to MCA solution

.. GENERATED FROM PYTHON SOURCE LINES 41-45

.. code-block:: default


    rot = MCA_Rotator(n_rot=10)
    rot.rotate(mca)








.. GENERATED FROM PYTHON SOURCE LINES 46-48

Get rotated singular vectors, projections (PCs), homogeneous and heterogeneous
patterns:

.. GENERATED FROM PYTHON SOURCE LINES 48-54

.. code-block:: default


    singular_vectors = rot.singular_vectors()
    pcs = rot.pcs()
    hom_pats, pvals_hom = rot.homogeneous_patterns()
    het_pats, pvals_het = rot.heterogeneous_patterns()








.. GENERATED FROM PYTHON SOURCE LINES 55-59

When two fields are expected, the output of the above methods is a list of
length 2, with the first and second entry containing the relevant object for
``X`` and ``Y``. For example, the p-values obtained from the two-sided t-test
for the homogeneous patterns of ``X`` are:

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: default


    pvals_hom[0]






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme=dark],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1F1F1F;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 20px 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: none;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: '►';
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: '▼';
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: '(';
    }

    .xr-dim-list:after {
      content: ')';
    }

    .xr-dim-list li:not(:last-child):after {
      content: ',';
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2 {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;left_homogeneous_patterns_p_values&#x27; (lat: 25, lon: 26,
                                                            mode: 10)&gt;
    array([[[0.00000000e+000, 6.16762261e-069, 4.34584568e-001, ...,
             2.24705120e-012, 5.23458884e-013, 9.06037844e-001],
            [0.00000000e+000, 6.55586526e-067, 5.16380041e-001, ...,
             9.95234131e-014, 5.58945594e-014, 8.64946255e-001],
            [0.00000000e+000, 1.54152405e-065, 5.74626723e-001, ...,
             1.03451356e-014, 1.46443976e-014, 8.39143317e-001],
            ...,
            [0.00000000e+000, 1.22568178e-075, 1.31934361e-001, ...,
             4.74453008e-007, 7.79632266e-001, 5.47813583e-003],
            [0.00000000e+000, 2.71830973e-076, 2.03274266e-001, ...,
             4.01980137e-006, 7.97021954e-001, 1.49423478e-002],
            [0.00000000e+000, 1.49314345e-075, 3.14959472e-001, ...,
             3.54555885e-005, 8.38013821e-001, 3.60317193e-002]],

           [[0.00000000e+000, 4.34166157e-109, 9.57053007e-001, ...,
             1.57640196e-018, 7.63309993e-018, 2.08839809e-002],
            [0.00000000e+000, 6.68452804e-107, 9.86485537e-001, ...,
             1.39636606e-019, 1.84962169e-018, 1.93741459e-002],
            [0.00000000e+000, 1.37451947e-106, 9.71474248e-001, ...,
             3.57776869e-020, 1.84980897e-018, 2.08142288e-002],
    ...
            [1.13304428e-079, 3.68441423e-006, 5.67719189e-158, ...,
             1.90236166e-019, 9.98790779e-001, 9.48615548e-001],
            [1.17004677e-086, 4.54440008e-001, 2.39915450e-300, ...,
             7.74372179e-010, 5.21878381e-001, 3.16373741e-001],
            [1.58733987e-105, 7.47356804e-001, 5.88708950e-265, ...,
             1.69652619e-001, 8.84719499e-002, 6.29475383e-002]],

           [[5.91757710e-081, 0.00000000e+000, 1.12314476e-013, ...,
             3.34137875e-001, 2.61788722e-003, 1.33038501e-001],
            [4.09021489e-064, 0.00000000e+000, 4.66657395e-015, ...,
             1.23634234e-001, 6.63017027e-004, 3.88205130e-002],
            [6.23386540e-058, 0.00000000e+000, 7.50120009e-017, ...,
             1.37096137e-002, 2.44174477e-003, 2.39468916e-003],
            ...,
            [4.45270013e-046, 2.15095094e-115, 1.79188881e-019, ...,
             9.17656447e-001, 5.33562889e-001, 9.33506122e-001],
            [7.99360211e-107, 1.25698075e-037, 5.26443407e-002, ...,
             1.44454410e-002, 7.42158476e-001, 6.41394466e-001],
            [6.95325781e-234, 3.79430892e-010, 3.38566782e-096, ...,
             5.75020666e-003, 9.37542810e-001, 5.12895336e-001]]])
    Coordinates:
      * lat      (lat) float32 75.0 72.5 70.0 67.5 65.0 ... 25.0 22.5 20.0 17.5 15.0
      * lon      (lon) float32 200.0 202.5 205.0 207.5 ... 255.0 257.5 260.0 262.5
      * mode     (mode) int64 1 2 3 4 5 6 7 8 9 10</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'left_homogeneous_patterns_p_values'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>lat</span>: 25</li><li><span class='xr-has-index'>lon</span>: 26</li><li><span class='xr-has-index'>mode</span>: 10</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-959bddf3-1328-41ee-80b7-daa6ebf5ea81' class='xr-array-in' type='checkbox' checked><label for='section-959bddf3-1328-41ee-80b7-daa6ebf5ea81' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.0 6.168e-69 0.4346 8.175e-08 ... 0.1294 0.00575 0.9375 0.5129</span></div><div class='xr-array-data'><pre>array([[[0.00000000e+000, 6.16762261e-069, 4.34584568e-001, ...,
             2.24705120e-012, 5.23458884e-013, 9.06037844e-001],
            [0.00000000e+000, 6.55586526e-067, 5.16380041e-001, ...,
             9.95234131e-014, 5.58945594e-014, 8.64946255e-001],
            [0.00000000e+000, 1.54152405e-065, 5.74626723e-001, ...,
             1.03451356e-014, 1.46443976e-014, 8.39143317e-001],
            ...,
            [0.00000000e+000, 1.22568178e-075, 1.31934361e-001, ...,
             4.74453008e-007, 7.79632266e-001, 5.47813583e-003],
            [0.00000000e+000, 2.71830973e-076, 2.03274266e-001, ...,
             4.01980137e-006, 7.97021954e-001, 1.49423478e-002],
            [0.00000000e+000, 1.49314345e-075, 3.14959472e-001, ...,
             3.54555885e-005, 8.38013821e-001, 3.60317193e-002]],

           [[0.00000000e+000, 4.34166157e-109, 9.57053007e-001, ...,
             1.57640196e-018, 7.63309993e-018, 2.08839809e-002],
            [0.00000000e+000, 6.68452804e-107, 9.86485537e-001, ...,
             1.39636606e-019, 1.84962169e-018, 1.93741459e-002],
            [0.00000000e+000, 1.37451947e-106, 9.71474248e-001, ...,
             3.57776869e-020, 1.84980897e-018, 2.08142288e-002],
    ...
            [1.13304428e-079, 3.68441423e-006, 5.67719189e-158, ...,
             1.90236166e-019, 9.98790779e-001, 9.48615548e-001],
            [1.17004677e-086, 4.54440008e-001, 2.39915450e-300, ...,
             7.74372179e-010, 5.21878381e-001, 3.16373741e-001],
            [1.58733987e-105, 7.47356804e-001, 5.88708950e-265, ...,
             1.69652619e-001, 8.84719499e-002, 6.29475383e-002]],

           [[5.91757710e-081, 0.00000000e+000, 1.12314476e-013, ...,
             3.34137875e-001, 2.61788722e-003, 1.33038501e-001],
            [4.09021489e-064, 0.00000000e+000, 4.66657395e-015, ...,
             1.23634234e-001, 6.63017027e-004, 3.88205130e-002],
            [6.23386540e-058, 0.00000000e+000, 7.50120009e-017, ...,
             1.37096137e-002, 2.44174477e-003, 2.39468916e-003],
            ...,
            [4.45270013e-046, 2.15095094e-115, 1.79188881e-019, ...,
             9.17656447e-001, 5.33562889e-001, 9.33506122e-001],
            [7.99360211e-107, 1.25698075e-037, 5.26443407e-002, ...,
             1.44454410e-002, 7.42158476e-001, 6.41394466e-001],
            [6.95325781e-234, 3.79430892e-010, 3.38566782e-096, ...,
             5.75020666e-003, 9.37542810e-001, 5.12895336e-001]]])</pre></div></div></li><li class='xr-section-item'><input id='section-7952c91e-f68a-48f8-ba4c-bbd68f100d10' class='xr-section-summary-in' type='checkbox'  checked><label for='section-7952c91e-f68a-48f8-ba4c-bbd68f100d10' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>75.0 72.5 70.0 ... 20.0 17.5 15.0</div><input id='attrs-c8d52b88-2106-4a2a-8478-085977e118bd' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c8d52b88-2106-4a2a-8478-085977e118bd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1de17bc2-ab43-4b27-9745-6b819326b77b' class='xr-var-data-in' type='checkbox'><label for='data-1de17bc2-ab43-4b27-9745-6b819326b77b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>Latitude</dd><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([75. , 72.5, 70. , 67.5, 65. , 62.5, 60. , 57.5, 55. , 52.5, 50. , 47.5,
           45. , 42.5, 40. , 37.5, 35. , 32.5, 30. , 27.5, 25. , 22.5, 20. , 17.5,
           15. ], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>200.0 202.5 205.0 ... 260.0 262.5</div><input id='attrs-2042c1c7-a45d-4f43-b802-301ac1b50702' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2042c1c7-a45d-4f43-b802-301ac1b50702' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b6aa9476-cea7-4101-8baf-e12c3b8abe07' class='xr-var-data-in' type='checkbox'><label for='data-b6aa9476-cea7-4101-8baf-e12c3b8abe07' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>Longitude</dd><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([200. , 202.5, 205. , 207.5, 210. , 212.5, 215. , 217.5, 220. , 222.5,
           225. , 227.5, 230. , 232.5, 235. , 237.5, 240. , 242.5, 245. , 247.5,
           250. , 252.5, 255. , 257.5, 260. , 262.5], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>mode</span></div><div class='xr-var-dims'>(mode)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 2 3 4 5 6 7 8 9 10</div><input id='attrs-2cc4be9c-b4be-4faf-b96f-41ecb7a7420f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2cc4be9c-b4be-4faf-b96f-41ecb7a7420f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7bbf9c5d-94cd-43ac-aab2-9316bae8bff3' class='xr-var-data-in' type='checkbox'><label for='data-7bbf9c5d-94cd-43ac-aab2-9316bae8bff3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-9d070b49-198d-4efd-8fe4-33dda47f360a' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-9d070b49-198d-4efd-8fe4-33dda47f360a' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 63-64

Create a mask to identifiy where p-values are below 0.05

.. GENERATED FROM PYTHON SOURCE LINES 64-69

.. code-block:: default


    hom_mask = [values < 0.05 for values in pvals_hom]
    het_mask = [values < 0.05 for values in pvals_het]









.. GENERATED FROM PYTHON SOURCE LINES 70-71

Plot some relevant quantities of mode 2.

.. GENERATED FROM PYTHON SOURCE LINES 71-123

.. code-block:: default


    lonlats = [
        np.meshgrid(pvals_hom[0].lon.values, pvals_hom[0].lat.values),
        np.meshgrid(pvals_hom[1].lon.values, pvals_hom[1].lat.values)
    ]
    proj = [
        Orthographic(central_latitude=30, central_longitude=-120),
        Orthographic(central_latitude=30, central_longitude=-60)
    ]
    kwargs1 = {
        'cmap' : 'BrBG', 'vmin' : -.05, 'vmax': .05, 'transform': PlateCarree()
    }
    kwargs2 = {
        'cmap' : 'RdBu', 'vmin' : -1, 'vmax': 1, 'transform': PlateCarree()
    }

    mode = 2

    fig = plt.figure(figsize=(7, 14))
    gs = GridSpec(5, 2)
    ax1 = [fig.add_subplot(gs[0, i], projection=proj[i]) for i in range(2)]
    ax2 = [fig.add_subplot(gs[1, i], projection=proj[i]) for i in range(2)]
    ax3 = [fig.add_subplot(gs[2, i], projection=proj[i]) for i in range(2)]
    ax4 = [fig.add_subplot(gs[3, i]) for i in range(2)]

    for i, a in enumerate(ax1):
        singular_vectors[i].sel(mode=mode).plot(ax=a, **kwargs1)

    for i, a in enumerate(ax2):
        hom_pats[i].sel(mode=mode).plot(ax=a, **kwargs2)
        a.scatter(
            lonlats[i][0], lonlats[i][1], hom_mask[i].sel(mode=mode).values * .5,
            color='k', alpha=.5, transform=PlateCarree()
        )
    for i, a in enumerate(ax3):
        het_pats[i].sel(mode=mode).plot(ax=a, **kwargs2)
        a.scatter(
            lonlats[i][0], lonlats[i][1], het_mask[i].sel(mode=mode).values * .5,
            color='k', alpha=.5, transform=PlateCarree()
        )

    for i, a in enumerate(ax4):
        pcs[i].sel(mode=mode).plot(ax=a)
        a.set_xlabel('')


    for a in np.ravel([ax1, ax2, ax3]):
        a.coastlines(color='.5')
        a.add_feature(LAND)

    plt.tight_layout()
    plt.savefig('rotated_mca.jpg')



.. image-sg:: /auto_examples/2cross/images/sphx_glr_plot_rotated_mca_001.png
   :alt: mode = 2, mode = 2, mode = 2, mode = 2, mode = 2, mode = 2, mode = 2, mode = 2
   :srcset: /auto_examples/2cross/images/sphx_glr_plot_rotated_mca_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.247 seconds)


.. _sphx_glr_download_auto_examples_2cross_plot_rotated_mca.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_rotated_mca.py <plot_rotated_mca.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_rotated_mca.ipynb <plot_rotated_mca.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
